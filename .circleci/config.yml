version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Choose either one of the orbs below
  # welcome: circleci/welcome-orb@0.4.1
  aws-cli: circleci/aws-cli@3.1
# Define the jobs we want to run for this project


commands:
  # Exercise: Reusable Job Code
  destroy_aws_environment:
    steps:
      - run:
          name: Destroy AWS Environment
          when: on_fail
          command: | 
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5}



jobs:
  # Exercise: Infrastructure Creation
  # Exercise - Rollback
  create_infrastructure: 
#      docker:
#        - image: amazon/aws-cli
      executor: aws-cli/default
      steps:
        - checkout
        - aws-cli/setup:
            profile-name: default
        - run:
            name: Create Cloudformation Stack
            command: |
              aws cloudformation deploy \
                --template-file template.yml \
                --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
                --region us-east-1
        - destroy_aws_environment
        - run: touch ~/inventory.txt
        - run: echo [all] > inventory.txt
        - run: aws ec2 describe-instances --query 'Reservations[*].Instances[*].PublicIpAddress' --output text >> ~/inventory.txt
        - run: cat ~/inventory.txt
        - persist_to_workspace:
            root: ~/
            paths: 
              - inventory.txt


  # Exercise: Config and Deployment
  configure_infrastructure: 
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys: 
          fingerprints: ["ba:5c:84:48:e6:4e:22:59:a5:59:17:12:e1:ac:df:69"]
      - run:
          name: install dependencies
          command: | 
            # install the dependencies needed for your playbook
            apk add --update ansible
      - attach_workspace:
          at: ~/
      - run: cat ~/inventory.txt
      - run:
          name: Configure Server
          command: |
            ansible-playbook -i ~/inventory.txt playbook.yml
  
  # Exercise: Smoke Testing
  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run: apk add --update curl
      - run:
          name: smoke test
          command: |
            URL="https://blog.udacity22.com/"
            # Test if website exists
            if curl -s --head ${URL} 
            then
              return 0
            else
              return 1
            fi


# Sequential workflow
workflows:
  # Name the workflow
  myWorkflow:
    jobs:
      # - create_infrastructure
      # - configure_infrastructure:
      #     requires:
      #       - create_infrastructure
      - smoke_test